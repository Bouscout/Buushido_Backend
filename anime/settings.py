"""
Django settings for anime project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import dj_database_url
import datetime


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
import os
#SECRET_KEY = "django-insecure-2svs%xk0icjk0ju^3#*db-m%6xhaww8!gi6+q)i@-l$tqgwvjp"
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'cg#ps$gijwefjlidlkscjhvreibverkjrevubkrevjkrubjujbk')

# SECURITY WARNING: don't run with debug turned on in production!


DEBUG = True

#DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['buushido.ml']

#CSRF_TRUSTED_ORIGINS = ['https://*.railway.app']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "identifier.apps.IdentifierConfig",
    "contenu.apps.ContenuConfig",
    "colorfield",
    "gerant" ,
    "metrics",
    "whitenoise.runserver_nostatic" ,
    "django_extensions" ,
    "rest_framework",
    "corsheaders" ,
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = "anime.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR.joinpath('templates'),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.media",
            ],
        },
    },
]

WSGI_APPLICATION = "anime.wsgi.application"

DATABASE_ROUTERS = ['metrics.metrics_router.extra_db_router']
# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DATABASES = {

  'default': {

    'ENGINE': 'django.db.backends.mysql',

    'NAME': 'buushido_data_sbe',

    'USER': 'buushido_IcyGhost_testeur',

    'PASSWORD': 'theworldo12',

    'HOST': 'nl1-ss107.a2hosting.com',

    'PORT': '3306',

    'OPTIONS': {

      'sql_mode': 'traditional',

    },

  },

  'extra_db' : {

    'ENGINE': 'django.db.backends.mysql',

    'NAME': 'buushido_extra_sbe',

    'USER': 'buushido_IcyGhost_testeur',

    'PASSWORD': 'theworldo12',

    'HOST': 'nl1-ss107.a2hosting.com',

    'PORT': '3306',

    'OPTIONS': {

      'sql_mode': 'traditional',

    },


  }

}

#DATABASES['default'] = dj_database_url.config()


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]
#handling session token for both web case and mobile case using the rest session solution
# and the simple jwt one
REST_FRAMEWORK = {
    #This piece will make all request be authentucated before being processed
        # 'rest_framework.permissions.IsAuthenticated',
    # 'DEFAULT_PERMISSION_CLASSES' : (
    #     'rest_framework.permissions.IsAdminUser',
    # ),
    'DEFAULT_AUTHENTICATION_CLASSES' : (
    # 'rest_framework.authentication.TokenAuthentication',
    'rest_framework_simplejwt.authentication.JWTAuthentication',
    'rest_framework.authentication.SessionAuthentication',
    )
}
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1),
    'USER_ID_CLAIM' : 'id',
    }

# Internationalization
# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = BASE_DIR.joinpath('public')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = 'identifier.utilisateur'

# MEDIA_ROOT = 'home/buushido/buushido/public/media/'
MEDIA_ROOT = BASE_DIR.joinpath('public/media')

MEDIA_URL = ""
# for debug mode
# MEDIA_ROOT = BASE_DIR.joinpath('media/')
# MEDIA_URL = "/media/"


CORS_ORIGIN_ALLOW_ALL = True

# disabling limits for number of request for posting bot
DATA_UPLOAD_MAX_NUMBER_FIELDS = None

# CORS_ALLOWED_ORIGINS = [
# "https://buushido.ml",
# "http://buushido.ml",
# "http://localhost:3080",
# "http://127.0.0.1:9000"
# ]